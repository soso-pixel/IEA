import React, {useEffect, useState} from "react";
import styles from "./streaming-calculator.scss"
import PolarChart from "./charts/PolarChart"
import Inputs from "./inputs/Inputs"
import BarChart from "./charts/Barchart"

const StreamingCalculator = () => {
  const data = {
    devices: {
      smartphone: 0.0012,
      tablet: 0.003,
      laptop: 0.022,
      "television-50-led": 0.12,
    },
    networks: {
      wifi: 0.0182071738485764,
      "4g": 0.008525,
    },
    countries: {
      world: 463,
    }
  }
  const permuteAndSortAllData = (hours, countryValue) => {
    return Object.entries(data.devices).flatMap(([device, deviceValue]) => {
      return Object.entries(data.networks).map(([network, networkValue]) => {
        const deviceEmission = deviceValue*countryValue;
        const networkEmission = networkValue*countryValue;
        return {
          device: device,
          network: network,
          deviceEmission,
          networkEmission,
          totalEmission: deviceEmission+networkEmission
        };
      });
    }).sort((a,b)=>b.totalEmission - a.totalEmission);
  }


  const [deviceType, setDeviceType] = useState("")

  const [networkType, setNetworkType] = useState("")

  const [hours, setHours] = useState(1)

  const [selectedIdx, setSelectedIdx] = useState(-1);

  const [hoveredIdx, setHoveredIdx] = useState(-1);

  //Memoize
  const permuttedData = permuteAndSortAllData(hours,data.countries.world);

  useEffect(()=>{
    setSelectedIdx(permuttedData.findIndex(value=>value.device==deviceType && value.network == networkType));

  },[deviceType, networkType]);


  return (
    <>
      <header>
        <h1>
          Streaming calculator:
        </h1>
        <h3>
          Calculate the amount of CO2 emissions generated by streaming videos on different devices:
        </h3>
        <Inputs className={styles.inputs} deviceType={deviceType} networkType={networkType} hours={hours} setDeviceType={setDeviceType} setNetworkType={setNetworkType} setHours={setHours} />
      </header>
      <div className={styles.charts}>
        <BarChart className={styles["bar-chart"]} deviceType={deviceType} networkType={networkType} hours={hours} selectedIdx={selectedIdx} hoveredIdx={hoveredIdx} permuttedData={permuttedData}/>
        <PolarChart className={styles["polar-chart"]} hours={hours} hoveredIdx={hoveredIdx} setHoveredIdx={setHoveredIdx} selectedIdx={selectedIdx} setDeviceType={setDeviceType} setNetworkType={setNetworkType} data={permuttedData}/>
      </div>
    </>
  )
}



export default StreamingCalculator;
